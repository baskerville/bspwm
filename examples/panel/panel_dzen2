#! /bin/sh
#
# Example panel for dzen2

font_family='sans-serif'
font_size=11

. panel_colors

adaptive_centering=0
screen_width=$(sres -W)
NORMIFS=$IFS
FIELDIFS=':'
PADDING='  '

while getopts 'af:s:' opt ; do
    case "$opt" in
        a)
            adaptive_centering=1
            ;;
        f)
            font_family=$OPTARG
            ;;
        s)
            font_size=$OPTARG
            ;;
    esac
done

shift $((OPTIND - 1))

while read -r line ; do
    case $line in
        S*)
            # system informations
            sys_infos="^fg($COLOR_STATUS_FG)^bg($COLOR_STATUS_BG)^ca(1, bspc control --toggle-visibility)${PADDING}${line#?}${PADDING}^ca()^fg()^bg()${PADDING}"
            ;;
        T*)
            # focused window title
            title="^fg($COLOR_TITLE_FG)^bg($COLOR_TITLE_BG)^ca(1, bspc window -t floating)^ca(2, bspc window -t locked)^ca(3, bspc window -c)${PADDING}${line#?}${PADDING}^ca()^ca()^ca()^fg()^bg()"
            ;;
        W*)
            # window manager informations
            wm_infos="$PADDING"
            IFS=$FIELDIFS
            set -- ${line#?}
            while [ $# -gt 0 ] ; do
                item=$1
                case $item in
                    [OoFfUu]*)
                        # desktops
                        name=${item#?}
                        case $item in
                            [OFU]*)
                                # active desktop
                                FG=$COLOR_ACTIVE_FG
                                BG=$COLOR_ACTIVE_BG
                                ;;
                            o*)
                                # inactive desktop
                                FG=$COLOR_INACTIVE_FG
                                BG=$COLOR_INACTIVE_BG
                                ;;
                            f*)
                                # empty desktop
                                FG=$COLOR_EMPTY_FG
                                BG=$COLOR_EMPTY_BG
                                ;;
                            u*)
                                # urgent (inactive) desktop
                                FG=$COLOR_URGENT_FG
                                BG=$COLOR_URGENT_BG
                                ;;
                        esac
                        wm_infos="${wm_infos}^fg(${FG})^bg(${BG})^ca(1, bspc desktop -f ${name})^ca(2, bspc window -d ${name})^ca(3, bspc window -d ${name} -f)${PADDING}${name}${PADDING}^ca()^ca()^ca()"
                        ;;
                    L*)
                        # layout
                        layout=$(printf "%s" "${item#?}" | sed 's/^\(.\).*/\U\1/')
                        wm_infos="${wm_infos}^fg()^bg()${PADDING}${PADDING}^fg($COLOR_LAYOUT_FG)^bg($COLOR_LAYOUT_BG)^ca(1, bspc desktop -l next)^ca(2, bspc desktop -B)${PADDING}$layout${PADDING}^ca()^ca()"
                        ;;
                esac
                shift
            done
            IFS=$NORMIFS
            ;;
    esac
    set -- $(printf '%s\0%s\0%s' "$wm_infos" "$title" "$sys_infos" | sed 's/\^[a-z]\+([^)]*)//g' | xargs -0 txtw -f "$font_family" -s "$font_size")
    left_width=$1
    center_width=$2
    right_width=$3
    left_indent=0
    right_indent=$((screen_width - right_width))
    available_center=$((screen_width - (left_width + right_width)))
    if [ $available_center -lt $center_width ] ; then
        center_indent=$((left_indent + left_width))
    else
        if [ $adaptive_centering -eq 1 ] ; then
            center_indent=$((left_width + (available_center - center_width) / 2))
        else
            center_indent=$(( (screen_width - center_width) / 2 ))
        fi
    fi
    printf "%s\n" "^pa($left_indent)$wm_infos^pa($center_indent)$title^pa($right_indent)$sys_infos"
done
